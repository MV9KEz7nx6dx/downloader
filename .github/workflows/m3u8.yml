name: ZDownload m3u8
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      Url:
        description: 'Download Url'
        required: false
        default: 'false'
#   watch:
#     types: started
env:
  FILE_PATH: 'downloads'
jobs:
  m3u8download:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false 
        fetch-depth: 0 
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
        
    - name: install prerequisites
      run: |
        python -m pip install --upgrade pip wheel
        pip install requests cloudscraper pymongo pymongo[srv] pymongo[tls] certifi
    - uses: FedericoCarboni/setup-ffmpeg@v1
    - name: Downloading
      id: downloading
      run: |
        url="$(cat url)"
        filename=${url##*##}
        download=${url%##*}
        downloadurl=$(python get_m3u8.py $download)
        mkdir video
        ffmpeg -user_agent "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36" -i $downloadurl video/$filename
        echo "::set-output name=path::video/$filename"
        echo "::set-output name=filename::$filename"
        size=$(ls -l video/$filename | awk '{print $5}' )
        echo "::set-output name=size::$size"
       
    - uses: ykxVK8yL5L/add-to-web3@v1.5
      id: web3
      if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
      with:
        web3_token: ${{ secrets.WEB3_STORAGE_TOKEN }}
        path_to_add: "${{ steps.downloading.outputs.path }}" 
        file_name: "${{ steps.downloading.outputs.filename }}" 
        wrap_with_directory: true
        
    - name: Save Data
      id:  database
      if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
      run: |
        python save.py --con="${{ secrets.DB_CONNECT }}" --name="${{ steps.downloading.outputs.filename }}" --size="${{ steps.downloading.outputs.size }}" --cid="${{ steps.web3.outputs.cid }}"
        echo "::set-output name=status::ok"


    - name: Notify upload info to mqtt broker
      if: steps.database.outputs.status != '' && !cancelled() && !failure()
      uses: juhrlass/mqtt-action@master
      with:
        protocol: mqtt
        host: broker-cn.emqx.io
        port: 1883
        topic: ${{ secrets.SYNC_TOPIC }}
        message: 'ok'
        username: ''
        password: ''

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 0
