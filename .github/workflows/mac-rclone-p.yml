name: 0encryptonmac-p
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      Url:
        description: 'Download Url'
        required: false
        default: 'false'

env:
  FILE_PATH: 'downloads'
  
jobs:
  build:
    runs-on: macos-latest
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 
      
      - name: 增加可用空间 (删除dotnet, android、haskell、CodeQL)
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo rm -rf /System/Volumes/Data/Library/Developer/CoreSimulator/Images/*.dmg
          echo "硬盘详情："
          df -h

      - name: Rclone Install
        run: |
            curl https://rclone.org/install.sh | sudo bash

      - name: Check depends
        run: |
            rclone -V
            aria2c -v
            node -v
            python -V
            
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
           
      - name: Config Rclone
        run: |
          printf "$RCLONE_ENV_FILE" >> ~/.config/rclone/rclone.conf
        shell: bash
        env:
          RCLONE_ENV_FILE : ${{secrets.RCLONE_CONF}}
        
      - name: install prerequisites
        run: |
          python -m pip install --upgrade pip wheel
          pip install lk21==1.5.61 pymongo pymongo[srv] pymongo[tls] certifi SQLAlchemy psycopg2-binary
          
      - name: Downloading
        id: downloading
        run: |
          mkdir downloads
          python task-p.py --opt="query" --con="${{ secrets.DB_P_CONNECT }}" --isnow=0
          filename=$(ls downloads | head -n1)
          folder=$(sh folder.sh $filename)
          echo "::set-output name=path::downloads/$filename"
          echo "::set-output name=filename::$filename"
          echo "::set-output name=folder::$folder"
          size=$(ls -l downloads/$filename | awk '{print $5}' )
          echo $size
          echo "::set-output name=size::$size"
 
      - name: rclone copy
        if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
        run: |
          rclone copy ${{ steps.downloading.outputs.path }} files:/${{ steps.downloading.outputs.folder }} 
      
      - name: Save Data
        id:  database
        if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
        run: |
          python task-p.py --opt="delete" --con="${{ secrets.DB_P_CONNECT }}" --name="${{ steps.downloading.outputs.filename }}" --size="${{ steps.downloading.outputs.size }}" 
          echo "::set-output name=status::ok"


      - name: Download another right now
        if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
        run: |
            curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/MV9KEz7nx6dx/downloader/actions/workflows/mac-rclone-p.yml/dispatches \
            -d '{"ref":"main","inputs":{}}' 

      - name: 通知上传结果
        if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
        run: |
          wget -O /dev/null -o /dev/null "${{secrets.BARK_KEY}}?title=上传结果&icon=https://github.githubassets.com/assets/GitHub-Mark-ea2971cee799.png&group=Actions&body=${{ steps.downloading.outputs.filename }}上传成功&isArchive=0"
         
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v1.2.3
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 0
          keep_minimum_runs: 0
