name: ZDownload m3u8 by input
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      Url:
        description: 'Download Url'
        required: false
        default: 'false'
#   watch:
#     types: started
env:
  FILE_PATH: 'downloads'
jobs:
  m3u8download:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
      with:
        persist-credentials: false 
        fetch-depth: 0 
        
    - name: 增加可用空间 (删除dotnet, android、haskell、CodeQL)
      shell: bash
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /usr/local/lib/android
        sudo rm -rf /opt/ghc
        sudo rm -rf /opt/hostedtoolcache/CodeQL
        sudo rm -rf /System/Volumes/Data/Library/Developer/CoreSimulator/Images/*.dmg
        echo "硬盘详情："
        df -h

    - name: Rclone Install
      run: |
          curl https://rclone.org/install.sh | sudo bash

    - name: Check depends
      run: |
          rclone -V
          aria2c -v
          node -v
          python -V
            
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
          python-version: 3.9
           
    - name: Config Rclone
      run: |
        printf "$RCLONE_ENV_FILE" >> ~/.config/rclone/rclone.conf
      shell: bash
      env:
        RCLONE_ENV_FILE : ${{secrets.RCLONE_CONF_TESTJE}}
        
    - name: install prerequisites
      run: |
        python -m pip install --upgrade pip wheel
        pip install requests cloudscraper pymongo pymongo[srv] pymongo[tls] certifi
        
    - name: Setup FFmpeg
      uses: AnimMouse/setup-ffmpeg@v1
      with:
        version: 7.0.2
    
    - name: Downloading
      id: downloading
      run: |
        url="${{ github.event.inputs.Url}}"
        filename=${url##*##}
        folder=$(sh folder.sh $filename)          
        download=${url%##*}
        downloadurl=$download
        mkdir downloads
        ffmpeg -user_agent "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36" -i "$downloadurl" downloads/$filename
        echo "::set-output name=path::downloads/$filename"
        echo "::set-output name=filename::$filename"
        echo "::set-output name=folder::$folder"
        size=$(ls -l downloads/$filename | awk '{print $5}' )
        echo "::set-output name=size::$size"
       
    - name: rclone copy
      if: steps.downloading.outputs.filename != '' && !cancelled() && !failure()
      run: |
        rclone copy ${{ steps.downloading.outputs.path }} files:/${{ steps.downloading.outputs.folder }} 

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 0
